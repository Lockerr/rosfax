#elements.tab-pane
  .row
    .span2{style: 'height: 1px'}
      .tabbable.tabs-left.affix#elements_nav{:style => "margin-bottom: 18px; position: fixed"}
        %ul.nav.nav-tabs.second
          - Report::ELEMENTS.keys.each do |tab|
            %li{class: (tab == 'exterior' ? 'active' : nil)}
              %a{:href => "#tab_#{tab}"}
                = t("elements.#{tab}.title")
                %span{:style => 'color: #ddd'}
                  = "#{@report.elements.filled.where(section: tab).count}/#{Report::ELEMENTS[tab][:names].count}"
          

    
    .span10
      - @elements = Report::ELEMENTS
      - for tab in @elements.keys
        
        .accordion{style: 'background-color: white'}
          .accordion-group
            .accordion-heading
              .row-fluid
                .span10
                  .accordion-toggle{id: "tab_#{tab}", data: {toggle: :collapse, target: "##{tab}"}}
                    %h4= t("elements.#{tab}.title")
            .accordion-body.collapse.in{id: tab}
              .accordion-inner
                - @elements[tab][:names].size.times do |index|
                  - @elements[tab][:names][index].each do |place|
                    - parameters = {:report_id => @report.id, :object => 'elements', :section => tab, :place => place}
                    - if @points.select{|i| i.place == place}.select{|i| i.object == 'elements'}.any?
                      - check = @points.select{|i| i.place == place}.select{|i| i.object == 'elements'}.first
                      - parameters[:id] = check.id 
                    .object.row-fluid{:data => parameters}
                      .span2
                        = t("elements.#{tab}.#{place}").to_s+ ':'
                      .span3
                        .btn-toolbar.pull-left{:style => 'margin-top: 0px'}
                          .btn-group.pads.radio{:style => 'padding-left: 0px'}
                            - @elements[tab][:values][index].each do |i|
                              - change = :condition
                              - parameters[change] = i
                              - parameters[:change] = change

                              %button.check.btn.btn-small{:data => parameters, :class => ('btn-primary' if check.send(change) == i if check)}= i
                      .span2
                        .btn-group
                          .btn.btn-small
                            - if check.try(:state)
                              = check.state
                            - else
                              Состояние
                          .dropdown-menu
                            - %w(Завод Ремонт Замена Покраска).each do |i|
                              %li
                                .dropdown-element.alone{:data => {:change => :state,:value => i}}= t(i).to_s
                          .btn.btn-small.dropdown-toggle{"data-toggle" => "dropdown"}
                            %span.caret
                      .span3
                        = text_field 'point', 'description', :value => (check ? check.description : ''), :class => 'span12'  
                      .span1.camera
                        .btn{style: 'padding-top: 9px'}
                          %i.icon-camera
                      .span1
                        = render :partial => 'element_drop', :locals => {:object => check || Point.new, :place => :one}
                    %hr{style: 'margin: 5px 0'}/